═══════════════════════════════════════════════════════════════
    تعليمات تفعيل نظام التحكم في إيقاف/تشغيل النظام
═══════════════════════════════════════════════════════════════

✅ التحديثات المنفذة:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. ✓ تم فصل حالة النظام عن حساب المطور
   - الآن حساب المطور لا يتعطل عند إيقاف النظام
   
2. ✓ تم إضافة زر التحكم في Sidebar للمطور
   - أخضر = النظام مفعل
   - أحمر = النظام معطل
   
3. ✓ تم تحسين صفحة إيقاف النظام بثيم الداشبورد

4. ✓ عند إيقاف النظام:
   - المطور: يمكنه الدخول عادي
   - باقي المستخدمين: يتم منعهم من الدخول

═══════════════════════════════════════════════════════════════
    خطوات التفعيل (مهمة جداً)
═══════════════════════════════════════════════════════════════

⚠️ يجب تنفيذ هذه الخطوات بالترتيب:

الخطوة 1: توليد Prisma Client
─────────────────────────────────────────────────────────────
⚠️ مهم جداً: يجب إيقاف السيرفر أولاً!

1. أوقف السيرفر (اضغط Ctrl+C في Terminal)
2. أغلق جميع نوافذ VS Code
3. افتح Terminal جديد وشغل:

    npx prisma generate

إذا ظهر خطأ EPERM:
  - أعد تشغيل الكمبيوتر
  - أو احذف مجلد: node_modules\.prisma
  - ثم شغل: npx prisma generate

─────────────────────────────────────────────────────────────

الخطوة 2: تحديث قاعدة البيانات
─────────────────────────────────────────────────────────────
شغل أحد الأوامر التالية:

    npx prisma migrate dev --name add_system_settings

أو:

    npx prisma db push

─────────────────────────────────────────────────────────────

الخطوة 3: تهيئة الإعدادات الافتراضية
─────────────────────────────────────────────────────────────
شغل:

    node scripts/init-system-settings.js

هذا الأمر ينشئ السجل الافتراضي في قاعدة البيانات
─────────────────────────────────────────────────────────────

الخطوة 4: إعادة تشغيل السيرفر
─────────────────────────────────────────────────────────────
    npm run dev

═══════════════════════════════════════════════════════════════
    كيفية الاستخدام
═══════════════════════════════════════════════════════════════

📱 للمطور:
──────────────────────────────────────────────────────────────
1. سجل دخول بحساب المطور (developer@system.local)

2. في Sidebar (القائمة الجانبية) ستجد زر في الأسفل:
   
   🟢 "النظام مفعل" (أخضر) = النظام شغال
   🔴 "النظام معطل" (أحمر) = النظام واقف

3. اضغط على الزر للتبديل بين التفعيل والتعطيل

──────────────────────────────────────────────────────────────

🎯 الفرق بين الحالتين:
──────────────────────────────────────────────────────────────

✅ النظام مفعل:
   - جميع المستخدمين يدخلون عادي
   - كل شيء يشتغل طبيعي

❌ النظام معطل:
   - المطور: يدخل عادي ويقدر يشتغل
   - باقي المستخدمين: يروحوا صفحة الدفع ومايقدروا يدخلوا

═══════════════════════════════════════════════════════════════
    حل المشاكل الشائعة
═══════════════════════════════════════════════════════════════

❌ خطأ: Property 'systemSettings' does not exist
✅ الحل: شغل npx prisma generate

❌ خطأ: EPERM operation not permitted  
✅ الحل: 
   1. أغلق VS Code
   2. أوقف السيرفر
   3. شغل الأمر مرة أخرى

❌ الزر مايظهر في Sidebar
✅ الحل:
   1. تأكد إنك داخل بحساب المطور
   2. امسح cache المتصفح (Ctrl+Shift+Delete)
   3. أعد تحميل الصفحة (F5)

❌ النظام مايتحقق من الحالة
✅ الحل:
   1. شغل: node scripts/init-system-settings.js
   2. أعد تشغيل السيرفر
   3. امسح cache المتصفح

═══════════════════════════════════════════════════════════════
    ملاحظات مهمة
═══════════════════════════════════════════════════════════════

⚠️ حساب المطور محمي:
   - لا يتعطل أبداً مهما كانت حالة النظام
   - يقدر يدخل ويشتغل حتى لو النظام واقف

⚠️ المطور فقط:
   - هو الوحيد اللي يشوف زر التحكم
   - هو الوحيد اللي يقدر يوقف/يشغل النظام

⚠️ جميع المستخدمين الآخرين:
   - بما فيهم ADMIN
   - يتأثرون بإيقاف النظام
   - مايقدروا يدخلوا لما النظام يكون واقف

═══════════════════════════════════════════════════════════════
    الملفات المعدلة
═══════════════════════════════════════════════════════════════

✓ prisma/schema.prisma - إضافة جدول SystemSettings
✓ src/app/api/developer/toggle-system/route.ts - تحديث API
✓ src/app/api/system-status/route.ts - تحديث API
✓ src/components/app-sidebar.tsx - إضافة زر التحكم
✓ src/components/SystemStatusChecker.tsx - تحديث التحقق
✓ src/app/payment-required/page.tsx - تحسين التصميم
✓ src/app/developer-control/page.tsx - تحديث
✓ scripts/init-system-settings.js - script جديد

═══════════════════════════════════════════════════════════════

📞 للدعم: راجع ملف SYSTEM_CONTROL_SETUP.md للتفاصيل الكاملة

═══════════════════════════════════════════════════════════════
