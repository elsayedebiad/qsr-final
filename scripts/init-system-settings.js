const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function main() {
  try {
    console.log('๐ง ุฌุงุฑู ุฅูุดุงุก ุฅุนุฏุงุฏุงุช ุงููุธุงู ุงูุงูุชุฑุงุถูุฉ...')

    // ุฅูุดุงุก ุฃู ุชุญุฏูุซ ุฅุนุฏุงุฏ ุญุงูุฉ ุงููุธุงู
    const systemSetting = await prisma.systemSettings.upsert({
      where: { key: 'system_active' },
      update: {},
      create: {
        key: 'system_active',
        value: 'true' // ุงููุธุงู ููุนู ุงูุชุฑุงุถูุงู
      }
    })

    console.log('โ ุชู ุฅูุดุงุก ุฅุนุฏุงุฏุงุช ุงููุธุงู ุจูุฌุงุญ:')
    console.log('   - ุงูููุชุงุญ:', systemSetting.key)
    console.log('   - ุงููููุฉ:', systemSetting.value)
    console.log('   - ุงููุธุงู:', systemSetting.value === 'true' ? 'ููุนู โ' : 'ูุนุทู โ')

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุฅุนุฏุงุฏุงุช ุงููุธุงู:', error)
    process.exit(1)
  } finally {
    await prisma.$disconnect()
  }
}

main()
