#!/bin/bash

# ุฃููุงู ููุทุจุงุนุฉ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# ุฏุงูุฉ ููุทุจุงุนุฉ ุงูููููุฉ
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# ุงูุชุญูู ูู ูุฌูุฏ ููู .env
check_env() {
    if [ ! -f ".env" ]; then
        print_error "ููู .env ุบูุฑ ููุฌูุฏ!"
        print_warning "ูู ุจุฅูุดุงุก ููู .env ูู .env.example"
        exit 1
    fi
    print_success "ููู .env ููุฌูุฏ"
}

# ุงูุชุญูู ูู Node.js ู npm
check_node() {
    if ! command -v node &> /dev/null; then
        print_error "Node.js ุบูุฑ ูุซุจุช!"
        exit 1
    fi
    
    if ! command -v npm &> /dev/null; then
        print_error "npm ุบูุฑ ูุซุจุช!"
        exit 1
    fi
    
    print_success "Node.js ู npm ูุชููุฑุงู"
}

# ุงูุชุญูู ูู PostgreSQL
check_postgres() {
    if ! command -v psql &> /dev/null; then
        print_warning "psql ุบูุฑ ูุชููุฑ - ุชุฃูุฏ ูู ุฃู PostgreSQL ูุซุจุช"
    else
        print_success "PostgreSQL ูุชููุฑ"
    fi
}

# ุชุญุฏูุซ ุงูููุฏ
update_code() {
    print_status "ุชุญุฏูุซ ุงูููุฏ ูู Git..."
    if git pull origin main; then
        print_success "ุชู ุชุญุฏูุซ ุงูููุฏ ุจูุฌุงุญ"
    else
        print_error "ูุดู ูู ุชุญุฏูุซ ุงูููุฏ"
        exit 1
    fi
}

# ุชุซุจูุช ุงูุชุจุนูุงุช
install_dependencies() {
    print_status "ุชุซุจูุช ุงูุชุจุนูุงุช..."
    if npm ci; then
        print_success "ุชู ุชุซุจูุช ุงูุชุจุนูุงุช ุจูุฌุงุญ"
    else
        print_error "ูุดู ูู ุชุซุจูุช ุงูุชุจุนูุงุช"
        exit 1
    fi
}

# ุจูุงุก ุงูุชุทุจูู
build_app() {
    print_status "ุจูุงุก ุงูุชุทุจูู..."
    if npm run build; then
        print_success "ุชู ุจูุงุก ุงูุชุทุจูู ุจูุฌุงุญ"
    else
        print_error "ูุดู ูู ุจูุงุก ุงูุชุทุจูู"
        exit 1
    fi
}

# ุชุดุบูู migrations
run_migrations() {
    print_status "ุชุดุบูู migrations..."
    if npx prisma migrate deploy; then
        print_success "ุชู ุชุดุบูู migrations ุจูุฌุงุญ"
    else
        print_error "ูุดู ูู ุชุดุบูู migrations"
        exit 1
    fi
    
    print_status "ุฅูุดุงุก Prisma client..."
    if npx prisma generate; then
        print_success "ุชู ุฅูุดุงุก Prisma client ุจูุฌุงุญ"
    else
        print_error "ูุดู ูู ุฅูุดุงุก Prisma client"
        exit 1
    fi
}

# ูุญุต ุตุญุฉ ุงูุชุทุจูู
health_check() {
    print_status "ูุญุต ุตุญุฉ ุงูุชุทุจูู..."
    
    # ุงูุชุธุงุฑ ูููู ููุชุฃูุฏ ูู ุจุฏุก ุงูุชุทุจูู
    sleep 5
    
    if curl -f http://localhost:3000/api/health > /dev/null 2>&1; then
        print_success "ุงูุชุทุจูู ูุนูู ุจุดูู ุตุญูุญ"
    else
        print_warning "ูุง ูููู ุงููุตูู ูู health check - ูุฏ ูุญุชุงุฌ ุงูุชุทุจูู ููุช ุฃูุซุฑ ููุจุฏุก"
    fi
}

# ุฅุนุงุฏุฉ ุชุดุบูู ุงูุชุทุจูู ูุน PM2
restart_pm2() {
    if command -v pm2 &> /dev/null; then
        print_status "ุฅุนุงุฏุฉ ุชุดุบูู ุงูุชุทุจูู ูุน PM2..."
        
        # ุงูุชุญูู ูู ูุฌูุฏ ุงูุชุทุจูู ูู PM2
        if pm2 list | grep -q "cv-management"; then
            pm2 restart cv-management
            print_success "ุชู ุฅุนุงุฏุฉ ุชุดุบูู ุงูุชุทุจูู"
        else
            print_warning "ุงูุชุทุจูู ุบูุฑ ููุฌูุฏ ูู PM2ุ ุณูุชู ุจุฏุคู..."
            pm2 start ecosystem.config.js
            print_success "ุชู ุจุฏุก ุงูุชุทุจูู"
        fi
        
        # ุญูุธ ุงูุชูููู
        pm2 save
        
    else
        print_warning "PM2 ุบูุฑ ูุซุจุช - ุณูุชู ุชุดุบูู ุงูุชุทุจูู ูุจุงุดุฑุฉ"
        print_status "ุจุฏุก ุงูุชุทุจูู..."
        npm start &
    fi
}

# ุชุดุบูู ูุญุต ุงูุจูุงูุงุช
check_data() {
    print_status "ูุญุต ุงูุจูุงูุงุช..."
    if node scripts/check-data.js; then
        print_success "ูุญุต ุงูุจูุงูุงุช ููุชูู"
    else
        print_warning "ูุดููุฉ ูู ูุญุต ุงูุจูุงูุงุช - ุฑุงุฌุน ุงูุณุฌูุงุช"
    fi
}

# ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ
backup_database() {
    if [ "$1" = "--backup" ]; then
        print_status "ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ..."
        
        DATE=$(date +%Y%m%d_%H%M%S)
        BACKUP_DIR="./backups"
        
        # ุฅูุดุงุก ูุฌูุฏ ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ ุฅุฐุง ูู ููู ููุฌูุฏุงู
        mkdir -p $BACKUP_DIR
        
        # ุงุณุชุฎุฑุงุฌ ูุนูููุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช ูู .env
        DB_URL=$(grep DATABASE_URL .env | cut -d '=' -f2 | tr -d '"')
        
        if [ ! -z "$DB_URL" ]; then
            print_status "ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ููุงุนุฏุฉ ุงูุจูุงูุงุช..."
            # ููุง ูููู ุฅุถุงูุฉ ุฃูุฑ pg_dump ุญุณุจ ุฅุนุฏุงุฏุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช
            print_success "ุชู ุฅูุดุงุก ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ: backup_$DATE"
        else
            print_warning "ูุง ูููู ุงูุนุซูุฑ ุนูู DATABASE_URL"
        fi
    fi
}

# ุนุฑุถ ุงููุณุงุนุฏุฉ
show_help() {
    echo "ุงุณุชุฎุฏุงู: ./deploy.sh [OPTIONS]"
    echo ""
    echo "ุฎูุงุฑุงุช:"
    echo "  --backup     ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูุจู ุงููุดุฑ"
    echo "  --no-build   ุชุฎุทู ุนูููุฉ ุงูุจูุงุก"
    echo "  --help       ุนุฑุถ ูุฐู ุงููุณุงุนุฏุฉ"
    echo ""
}

# ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
main() {
    print_status "๐ ุจุฏุก ุนูููุฉ ุงููุดุฑ..."
    
    # ูุนุงูุฌุฉ ุงููุนุงููุงุช
    BACKUP=false
    NO_BUILD=false
    
    for arg in "$@"; do
        case $arg in
            --backup)
                BACKUP=true
                ;;
            --no-build)
                NO_BUILD=true
                ;;
            --help)
                show_help
                exit 0
                ;;
        esac
    done
    
    # ุชุดุบูู ุงููุญูุตุงุช ุงูุฃูููุฉ
    check_env
    check_node
    check_postgres
    
    # ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ุฅุฐุง ุทููุจ ุฐูู
    if [ "$BACKUP" = true ]; then
        backup_database --backup
    fi
    
    # ุชุญุฏูุซ ุงูููุฏ
    update_code
    
    # ุชุซุจูุช ุงูุชุจุนูุงุช
    install_dependencies
    
    # ุจูุงุก ุงูุชุทุจูู (ุฅูุง ุฅุฐุง ุชู ุชุฎุทูู)
    if [ "$NO_BUILD" = false ]; then
        build_app
    fi
    
    # ุชุดุบูู migrations
    run_migrations
    
    # ุฅุนุงุฏุฉ ุชุดุบูู ุงูุชุทุจูู
    restart_pm2
    
    # ูุญุต ุตุญุฉ ุงูุชุทุจูู
    health_check
    
    # ูุญุต ุงูุจูุงูุงุช
    check_data
    
    print_success "โ ุชู ุงููุดุฑ ุจูุฌุงุญ!"
    print_status "๐ ุงูุชุทุจูู ูุชุงุญ ุนูู: http://localhost:3000"
    
    # ุนุฑุถ ูุนูููุงุช ูููุฏุฉ
    echo ""
    print_status "ุฃูุงูุฑ ูููุฏุฉ:"
    echo "  pm2 status              - ุนุฑุถ ุญุงูุฉ ุงูุชุทุจูู"
    echo "  pm2 logs cv-management  - ุนุฑุถ ุณุฌูุงุช ุงูุชุทุจูู"
    echo "  pm2 restart cv-management - ุฅุนุงุฏุฉ ุชุดุบูู ุงูุชุทุจูู"
    echo "  node scripts/check-data.js - ูุญุต ุงูุจูุงูุงุช"
}

# ุชุดุบูู ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
main "$@"
